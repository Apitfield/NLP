# -*- coding: utf-8 -*-
"""
Created on Sat Feb 16 14:35:50 2019

@author: ANTHONYPitfield
"""

import pandas as pd
import numpy as np

#Feature Scaling
from sklearn.preprocessing import StandardScaler

df = pd.read_excel('bgis_vendor_MMAI891.xlsx')
sc = StandardScaler()

#df.describe()
#df.isnull().sum().sum()
#Remove Work_Duration_Days_Rounded and off_by_days_Rounded, and work order description
df=df.drop('Work_Duration_Days_Rounded', axis=1)
df=df.drop('off_by_days_Rounded', axis=1)
df=df.drop('Description_Document', axis=1)
#print(df.isnull().sum())

#### Get one hot encoding of columns Building_ID
one_hot = pd.get_dummies(df['Building_ID'])
# Drop column Building_ID as it is encoded
df = df.drop('Building_ID',axis = 1)
# Join the encoded df
df = df.join(one_hot)


#### Get one hot encoding of columns Property_Usage
one_hot = pd.get_dummies(df['Property_Usage'])
# Drop column as it is encoded
df = df.drop('Property_Usage',axis = 1)
# Join the encoded df
df = df.join(one_hot)

#### Get one hot encoding of columns Province
one_hot = pd.get_dummies(df['Province'])
# Drop column as it is encoded
df = df.drop('Province',axis = 1)
# Join the encoded df
df = df.join(one_hot)

#### Get one hot encoding of columns Region_Name
one_hot = pd.get_dummies(df['Region_Name'])
# Drop column as it is encoded
df = df.drop('Region_Name',axis = 1)
# Join the encoded df
df = df.join(one_hot)

#### Get one hot encoding of columns ServiceType_Cd
one_hot = pd.get_dummies(df['ServiceType_Cd'])
# Drop column as it is encoded
df = df.drop('ServiceType_Cd',axis = 1)
# Join the encoded df
df = df.join(one_hot)

#### Get one hot encoding of columns ServiceProvider_Type
one_hot = pd.get_dummies(df['ServiceProvider_Type'])
# Drop column as it is encoded
df = df.drop('ServiceProvider_Type',axis = 1)
# Join the encoded df
df = df.join(one_hot)

#### Get one hot encoding of columns WorkOrderSource_Cd
one_hot = pd.get_dummies(df['WorkOrderSource_Cd'])
# Drop column as it is encoded
df = df.drop('WorkOrderSource_Cd',axis = 1)
# Join the encoded df
df = df.join(one_hot)

#### Get one hot encoding of columns WorkOrderType_Cd
one_hot = pd.get_dummies(df['WorkOrderType_Cd'])
# Drop column as it is encoded
df = df.drop('WorkOrderType_Cd',axis = 1)
# Join the encoded df
df = df.join(one_hot)

#### Get one hot encoding of columns WorkOrder_Priority_Desc
one_hot = pd.get_dummies(df['WorkOrder_Priority_Desc'])
# Drop column as it is encoded
df = df.drop('WorkOrder_Priority_Desc',axis = 1)
# Join the encoded df
df = df.join(one_hot)

#### Get one hot encoding of columns City_up2
one_hot = pd.get_dummies(df['City_up2'])
# Drop column as it is encoded
df = df.drop('City_up2',axis = 1)
# Join the encoded df


#Scale
df_scaled = sc.fit_transform(df)
df_scaled_labeled = pd.DataFrame(df_scaled, columns = df.columns)
#Export functiojn
#df_scaled.to_csv('BGIS_Vendor_scaled1hot.csv')
np.savetxt(r'C:\Users\ANTHONYPitfield\Documents\MMAI\MMAI891 NLP\Term Project\BGIS_Vendor_scaled1hot.csv',df_scaled_labeled,delimiter=',')
